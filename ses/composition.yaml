# From https://github.com/upbound/provider-terraform/blob/main/examples/transition/01-composition-tf-only/composition.yaml
# This is an implementation of the CompositeResourceDefinition. The spec.compositeTypeRef connects the two.
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: opentofu-xawssimpleemailservice.fedcloud.gsa.gov
  labels:
    provider: opentofu
    implementation: opentofu
spec:
  compositeTypeRef:
    apiVersion: fedcloud.gsa.gov/v1alpha1
    kind: XAWSSimpleEmailService
  mode: Pipeline
  pipeline:
    - step: provision
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: provision
            base:
              apiVersion: opentofu.upbound.io/v1beta1
              kind: Workspace
              spec:
                forProvider:
                  source: Remote
                  # URL spec: https://developer.hashicorp.com/terraform/language/modules/sources#modules-in-package-sub-directories
                  module: git::https://github.com/cloud-gov/crossplane-pilot//ses/terraform/?ref=main
                  varFiles:
                    - secretKeyRef:
                        name: xawssimpleemailservice-vars
                        namespace: crossplane-system
                        key: terraform.tfvars
                      source: SecretKey
                  vars:
                    # WARNING: Preserve the order of this list. Items in .spec.resources[].patches[].toFieldPath rely on this order.
                    - key: domain
                      value: "" # default to empty if nothing is patched
                    - key: admin_email
                    - key: instance_id
                providerConfigRef:
                  name: opentofu-noauth # Provider configuration is done in-module; do not use the default providerconfig, to avoid a "duplicate provider configuration" error.
            patches:
              # Vars required by the OpenTofu module.
              - fromFieldPath: spec.domain
                toFieldPath: spec.forProvider.vars[0].value
                policy:
                  fromFieldPath: Optional
              - fromFieldPath: spec.adminEmail
                toFieldPath: spec.forProvider.vars[1].value
              - fromFieldPath: metadata.uid
                toFieldPath: spec.forProvider.vars[2].value
              # Fields required to create connection Secret.
              # XR is cluster-scoped, so no namespace, but preserves the namespace & name of its related claim in labels.
              - fromFieldPath: metadata.labels["crossplane.io/claim-name"]
                toFieldPath: spec.writeConnectionSecretToRef.name
              - fromFieldPath: metadata.labels["crossplane.io/claim-namespace"]
                toFieldPath: spec.writeConnectionSecretToRef.namespace
              # Patch from the workspace's status to the CompositeResource's status so the bind resource can access these fields.
              # See: https://docs.crossplane.io/latest/guides/function-patch-and-transform/#patching-between-resources
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.user_name
              #   toFieldPath: status.userName
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.binding_id
              #   toFieldPath: status.bindingID
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.instance_id
              #   toFieldPath: status.instanceID
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.configuration_set_arn
              #   toFieldPath: status.configurationSetARN
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.domain_arn
              #   toFieldPath: status.domainARN
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.bounce_topic_arn
              #   toFieldPath: status.bounceTopicARN
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.complaint_topic_arn
              #   toFieldPath: status.complaintTopicARN
              # - type: ToCompositeFieldPath
              #   fromFieldPath: status.atProvider.outputs.delivery_topic_arn
              #   toFieldPath: status.deliveryTopicARN
          # - name: bind
          #   base:
          #     apiVersion: opentofu.upbound.io/v1beta1
          #     kind: Workspace
          #     spec:
          #       forProvider:
          #         source: Remote
          #         module: git::https://github.com/cloud-gov/csb//brokerpaks/aws-ses/terraform/bind?ref=ses-topic
          #         varFiles:
          #           - secretKeyRef:
          #               name: xawssimpleemailservice-vars
          #               namespace: crossplane-system
          #               key: terraform.tfvars
          #             source: SecretKey
          #         vars: # anything without a value must be patched from the provision status
          #           - key: sourceIPs
          #             value: "[]"
          #           - key: notificationWebhook
          #             value: ""
          #           - key: userName
          #           - key: bindingID
          #           - key: instanceID
          #           - key: configurationSetARN
          #           - key: domainARN
          #           - key: bounceTopicARN
          #           - key: complaintTopicARN
          #           - key: deliveryTopicARN
          #       providerConfigRef:
          #         name: opentofu-noauth # Provider configuration is done in-module; do not use the default providerconfig, to avoid a "duplicate provider configuration" error.
          #   patches:
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.userName
          #       toFieldPath: spec.forProvider.vars[2]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.bindingID
          #       toFieldPath: spec.forProvider.vars[3]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.instanceID
          #       toFieldPath: spec.forProvider.vars[4]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.configurationSetARN
          #       toFieldPath: spec.forProvider.vars[5]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.domainARN
          #       toFieldPath: spec.forProvider.vars[6]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.bounceTopicARN
          #       toFieldPath: spec.forProvider.vars[7]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.complaintTopicARN
          #       toFieldPath: spec.forProvider.vars[8]
          #     - type: FromCompositeFieldPath
          #       fromFieldPath: status.deliveryTopicARN
          #       toFieldPath: spec.forProvider.vars[9]
